--- lib/Parser/PatternParser/ParserFactory.php	2018-07-21 16:14:17.000000000 +0900
+++ ParserFactory.php	2018-07-21 16:14:01.000000000 +0900
@@ -1,6 +1,6 @@
 <?php declare(strict_types=1);
 
-namespace PhpParser;
+namespace Phinder\Parser\PatternParser;
 
 class ParserFactory
 {
@@ -18,23 +18,23 @@
      *
      * @return Parser The parser instance
      */
-    public function create(int $kind, Lexer $lexer = null, array $parserOptions = []) : Parser {
+    public function create(int $kind, Lexer $lexer = null, array $parserOptions = []) {
         if (null === $lexer) {
-            $lexer = new Lexer\Emulative();
+            $lexer = new \PhpParser\Lexer\Emulative();
         }
         switch ($kind) {
             case self::PREFER_PHP7:
-                return new Parser\Multiple([
-                    new Parser\Php7($lexer, $parserOptions), new Parser\Php5($lexer, $parserOptions)
+                return new \PhpParser\Parser\Multiple([
+                    new Pattern7($lexer, $parserOptions), new Pattern5($lexer, $parserOptions)
                 ]);
             case self::PREFER_PHP5:
-                return new Parser\Multiple([
-                    new Parser\Php5($lexer, $parserOptions), new Parser\Php7($lexer, $parserOptions)
+                return new \PhpParser\Parser\Multiple([
+                    new Pattern5($lexer, $parserOptions), new Pattern7($lexer, $parserOptions)
                 ]);
             case self::ONLY_PHP7:
-                return new Parser\Php7($lexer, $parserOptions);
+                return new Pattern7($lexer, $parserOptions);
             case self::ONLY_PHP5:
-                return new Parser\Php5($lexer, $parserOptions);
+                return new Pattern5($lexer, $parserOptions);
             default:
                 throw new \LogicException(
                     'Kind must be one of ::PREFER_PHP7, ::PREFER_PHP5, ::ONLY_PHP7 or ::ONLY_PHP5'
