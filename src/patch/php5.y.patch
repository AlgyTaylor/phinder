--- ../vendor/nikic/php-parser/grammar/php5.y	2018-10-10 18:24:14.000000000 +0900
+++ grammar/php5.y	2019-03-20 19:51:33.000000000 +0900
@@ -6,7 +6,7 @@
 %%
 
 start:
-    top_statement_list                                      { $$ = $this->handleNamespaces($1); }
+      expr                                               { $$ = $1; }
 ;
 
 top_statement_list_ex:
@@ -202,7 +202,6 @@
     | T_ECHO expr_list ';'                                  { $$ = Stmt\Echo_[$2]; }
     | T_INLINE_HTML                                         { $$ = Stmt\InlineHTML[$1]; }
     | yield_expr ';'                                        { $$ = Stmt\Expression[$1]; }
-    | expr ';'                                              { $$ = Stmt\Expression[$1]; }
     | T_UNSET '(' variables_list ')' ';'                    { $$ = Stmt\Unset_[$3]; }
     | T_FOREACH '(' expr T_AS foreach_variable ')' foreach_statement
           { $$ = Stmt\Foreach_[$3, $5[0], ['keyVar' => null, 'byRef' => $5[1], 'stmts' => $7]]; }
@@ -430,6 +429,7 @@
 argument:
       expr                                                  { $$ = Node\Arg[$1, false, false]; }
     | '&' variable                                          { $$ = Node\Arg[$2, true, false]; }
+    | T_ELLIPSIS                                            { $$ = Node\Arg[WildcardN[], false, false]; }
     | T_ELLIPSIS expr                                       { $$ = Node\Arg[$2, false, true]; }
 ;
 
@@ -625,6 +625,7 @@
     | T_INCLUDE expr                                        { $$ = Expr\Include_[$2, Expr\Include_::TYPE_INCLUDE]; }
     | T_INCLUDE_ONCE expr                                   { $$ = Expr\Include_[$2, Expr\Include_::TYPE_INCLUDE_ONCE]; }
     | T_EVAL parentheses_expr                               { $$ = Expr\Eval_[$2]; }
+    | T_EVAL                                                { $$ = Expr\Eval_[Wildcard[]]; }
     | T_REQUIRE expr                                        { $$ = Expr\Include_[$2, Expr\Include_::TYPE_REQUIRE]; }
     | T_REQUIRE_ONCE expr                                   { $$ = Expr\Include_[$2, Expr\Include_::TYPE_REQUIRE_ONCE]; }
     | T_INT_CAST expr                                       { $$ = Expr\Cast\Int_    [$2]; }
@@ -873,8 +874,8 @@
 ;
 
 static_array_pair:
-      static_scalar T_DOUBLE_ARROW static_scalar            { $$ = Expr\ArrayItem[$3, $1,   false]; }
-    | static_scalar                                         { $$ = Expr\ArrayItem[$1, null, false]; }
+      static_scalar T_DOUBLE_ARROW static_scalar            { $$ = ArrayItem[$3, $1,   false]; }
+    | static_scalar                                         { $$ = ArrayItem[$1, null, false]; }
 ;
 
 variable:
@@ -882,6 +883,7 @@
     | base_variable                                         { $$ = $1; }
     | function_call                                         { $$ = $1; }
     | new_expr_array_deref                                  { $$ = $1; }
+    | '?'                                                   { $$ = Wildcard[]; }
 ;
 
 new_expr_array_deref:
@@ -964,8 +966,8 @@
 ;
 
 list_expr_element:
-      variable                                              { $$ = Expr\ArrayItem[$1, null, false]; }
-    | list_expr                                             { $$ = Expr\ArrayItem[$1, null, false]; }
+      variable                                              { $$ = ArrayItem[$1, null, false]; }
+    | list_expr                                             { $$ = ArrayItem[$1, null, false]; }
     | /* empty */                                           { $$ = null; }
 ;
 
@@ -980,10 +982,12 @@
 ;
 
 array_pair:
-      expr T_DOUBLE_ARROW expr                              { $$ = Expr\ArrayItem[$3, $1,   false]; }
-    | expr                                                  { $$ = Expr\ArrayItem[$1, null, false]; }
-    | expr T_DOUBLE_ARROW '&' variable                      { $$ = Expr\ArrayItem[$4, $1,   true]; }
-    | '&' variable                                          { $$ = Expr\ArrayItem[$2, null, true]; }
+      expr T_DOUBLE_ARROW expr                              { $$ = ArrayItem[$3, $1,   false]; }
+    | '!' '(' expr T_DOUBLE_ARROW expr ')'                  { $$ = ArrayItem[$5, $3,   false]; $$->negate(); }
+    | expr                                                  { $$ = ArrayItem[$1, null, false]; }
+    | T_ELLIPSIS                                            { $$ = ArrayItem[WildcardN[], null, false]; }
+    | expr T_DOUBLE_ARROW '&' variable                      { $$ = ArrayItem[$4, $1,   true]; }
+    | '&' variable                                          { $$ = ArrayItem[$2, null, true]; }
 ;
 
 encaps_list:
